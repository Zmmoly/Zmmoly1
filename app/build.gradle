plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.aiassistant"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'org.tensorflow:tensorflow-lite:2.9.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.2'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.4.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

// إضافة مهمة تنزيل نماذج الذكاء الاصطناعي
task downloadMLModels {
    group = "AI Models"
    description = "تنزيل نماذج الذكاء الاصطناعي اللازمة للتطبيق"
    
    doLast {
        def pythonCommand = "python"
        // للتوافق مع أنظمة مختلفة، التحقق من نسخة بايثون المتاحة
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            // محاولة استخدام Python 3 على ويندوز
            try {
                exec {
                    commandLine 'where', 'python3'
                    setIgnoreExitValue(true)
                }
                pythonCommand = "python3"
            } catch (Exception ignored) {
                // استمر باستخدام python العادي
            }
        } else {
            // على لينكس/ماك، نفضل استخدام python3
            try {
                exec {
                    commandLine 'which', 'python3'
                    setIgnoreExitValue(true)
                }
                pythonCommand = "python3"
            } catch (Exception ignored) {
                // استمر باستخدام python العادي
            }
        }
        
        println "==== بدء تنزيل نماذج الذكاء الاصطناعي ===="
        
        // تنفيذ سكريبت التنزيل
        exec {
            // تمرير المسار الجذر للمشروع
            workingDir project.rootDir
            commandLine pythonCommand, 'download_ml_models.py'
            
            // إظهار الإخراج بشكل مباشر في وحدة التحكم
            standardOutput = System.out
            errorOutput = System.err
        }
        
        println "==== اكتمل تنزيل نماذج الذكاء الاصطناعي ===="
    }
}

// ربط مهمة تنزيل النماذج بمهمة preBuild لتشغيلها تلقائياً قبل بناء التطبيق
tasks.whenTaskAdded { task ->
    if (task.name == 'preBuild') {
        task.dependsOn downloadMLModels
    }
}